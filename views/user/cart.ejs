<!-- Include header -->
<%-include("../../views/partials/user/header")%>

    <style>
        /* Reset and base styles */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: Arial, sans-serif;
            color: #333;
            line-height: 1.5;
        }

        /* Main container */
        .cart-container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        /* Shipping info banner */
        .shipping-info-banner {
            display: flex;
            justify-content: space-between;
            padding: 15px 0;
            border-bottom: 1px solid #eee;
            margin-bottom: 20px;
            text-align: center;
        }

        .shipping-info-item {
            flex: 1;
            padding: 0 10px;
        }

        .shipping-info-item p {
            font-size: 14px;
            color: #333;
        }

        /* Cart title */
        .cart-title {
            text-align: center;
            margin-bottom: 30px;
        }

        .cart-title h1 {
            font-size: 18px;
            font-weight: 500;
        }

        /* Cart content wrapper */
        .cart-content-wrapper {
            display: flex;
            flex-wrap: wrap;
            gap: 30px;
        }

        /* Cart items section */
        .cart-items-section {
            flex: 1 1 60%;
            min-width: 300px;
            border: 1px solid rgb(190, 190, 190);
        }

        .empty-cart {
            padding: 50px 0;
            text-align: left;
        }

        .empty-cart h2 {
            font-size: 24px;
            font-weight: 600;
        }

        /* Cart item styles */
        .cart-item {
            display: flex;
            padding: 20px 0;
            border-bottom: 1px solid #eee;
            position: relative;
        }

        .cart-item-image {
            width: 120px;
            margin-right: 20px;
        }

        .cart-item-image img {
            width: 100%;
            height: auto;
            object-fit: cover;
        }

        .cart-item-details {
            flex: 1;
        }

        .cart-item-title {
            font-size: 16px;
            font-weight: 500;
            margin-bottom: 5px;
        }

        .cart-item-price {
            font-size: 16px;
            font-weight: 500;
            margin-bottom: 15px;
        }

        .cart-item-info {
            margin-bottom: 15px;
        }

        .info-row {
            display: flex;
            margin-bottom: 5px;
        }

        .info-label {
            width: 70px;
            font-size: 14px;
            color: #666;
        }

        .info-value {
            font-size: 14px;
        }

        .cart-item-actions {
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .wishlist-btn {
            background: none;
            border: 1px solid #ddd;
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
        }

        /* Quantity Counter styles */
        .cart-item-actions {
            display: flex;
            align-items: center;
            gap: 15px;
            /* Space between wishlist button and counter */
        }

        .wishlist-btn {
            background: none;
            border: 1px solid #ddd;
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
        }

        .quantity-counter {
            display: flex;
            align-items: center;
            height: 40px;
            /* Same height as wishlist button */
            border: 1px solid #ddd;
            border-radius: 4px;
            overflow: hidden;
        }

        .quantity-btn {
            width: 36px;
            height: 100%;
            background: none;
            border: none;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            padding: 0;
            color: #666;
            background-color: #f5f5f5;
            transition: background-color 0.2s;
        }

        .quantity-btn:hover {
            background-color: #e0e0e0;
        }

        .quantity-input {
            width: 36px;
            height: 100%;
            border: none;
            text-align: center;
            font-size: 14px;
            font-weight: 500;
            padding: 0;
            background: white;
        }

        .quantity-input:focus {
            outline: none;
        }

        .cart-item-right {
            display: flex;
            flex-direction: column;
            align-items: flex-end;
            justify-content: space-between;
            min-width: 120px;
            margin-right: 20px;
        }

        .remove-item {
            background: none;
            border: none;
            cursor: pointer;
            color: #666;
        }

        .item-total {
            text-align: right;
        }

        .size-value,
        .total-value {
            display: block;
            font-weight: 500;
            margin-bottom: 10px;
        }

        /* Order summary section */
        .order-summary {
            flex: 1 1 30%;
            min-width: 300px;
            background-color: #eaeaea;
            padding: 20px;
            border-radius: 4px;
            height: fit-content;
        }

        .summary-row {
            display: flex;
            justify-content: space-between;
            margin-bottom: 15px;
        }

        .apply-discount {
            color: #333;
            text-decoration: none;
            font-weight: 500;
        }

        .summary-divider {
            height: 1px;
            background-color: #ddd;
            margin: 15px 0;
        }

        .total {
            font-weight: 600;
            font-size: 16px;
        }

        .checkout-btn {
            width: 100%;
            padding: 15px;
            background-color: #222;
            color: white;
            border: none;
            margin: 20px 0;
            cursor: pointer;
            font-size: 16px;
            transition: background-color 0.3s;
        }

        .checkout-btn:hover {
            background-color: #000;
        }

        .payment-info {
            margin-bottom: 20px;
        }

        .payment-info p {
            margin-bottom: 10px;
            font-size: 14px;
        }

        .payment-methods {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .payment-icon {
            height: 30px;
            width: auto;
        }

        .visa {
            content: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1000 324'%3E%3Cpath fill='%230066B2' d='M651.3 0H348.5v324h302.8V0z'/%3E%3Cpath fill='%23FFF' d='M387.8 131.5l-33.7 88.2h-22.6l-16.5-63.9c-1-3.8-1.8-5.2-4.7-6.8-4.8-2.7-12.5-5.1-19.5-6.7l.5-1.8h33.6c4.3 0 8.1 2.9 9.1 7.8l8.3 44.1 20.5-52h22.5zm89.1 59.5c.1-20.8-28.9-22-28.7-31.3.1-2.8 2.8-5.8 8.7-6.6 2.9-.4 11-.7 20.2 3.7l3.6-16.8c-4.9-1.8-11.3-3.5-19.2-3.5-20.3 0-34.5 10.8-34.6 26.2-.1 11.4 10.2 17.8 17.9 21.6 8 3.9 10.7 6.4 10.6 9.8-.1 5.3-6.4 7.7-12.2 7.7-10.3.2-16.2-2.8-21-5l-3.7 17.3c4.8 2.2 13.5 4.1 22.6 4.2 21.4 0 35.4-10.6 35.4-27.1m53.2 28.7h19.8l-17.3-88.2h-18.3c-4.1 0-7.6 2.4-9.1 6.1l-32.1 82.1h22.5l4.5-12.3h27.5l2.5 12.3zm-23.8-29l11.4-31.4 6.5 31.4h-17.9zm-78.2-59.2l-17.7 88.2h-21.4l17.7-88.2h21.4z'/%3E%3C/svg%3E");
        }

        .mastercard {
            content: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 131.39 86.9'%3E%3Cpath d='M48.37 15.14h34.66v56.61H48.37z' fill='%23ff5f00'/%3E%3Cpath d='M51.94 43.45a35.94 35.94 0 0113.75-28.3 36 36 0 100 56.61 35.94 35.94 0 01-13.75-28.31z' fill='%23eb001b'/%3E%3Cpath d='M120.5 65.76V64.6h.5v-.24h-1.19v.24h.47v1.16zm2.31 0v-1.4h-.36l-.42 1-.42-1h-.36v1.4h.26V64.7l.39.91h.27l.39-.91v1.06zM123.94 43.45a36 36 0 01-58.25 28.3 36 36 0 000-56.61 36 36 0 0158.25 28.3z' fill='%23f79e1b'/%3E%3C/svg%3E");
        }

        .cod {
            font-size: 14px;
            color: #666;
        }

        .delivery-info {
            margin-bottom: 20px;
        }

        .delivery-info p {
            font-size: 13px;
            color: #666;
            margin-bottom: 10px;
        }

        .delivery-info a {
            color: #333;
            text-decoration: none;
        }

        .delivery-options {
            display: flex;
            align-items: center;
            padding: 15px 0;
            border-top: 1px solid #ddd;
            cursor: pointer;
        }

        .option-icon {
            margin-right: 10px;
        }

        .delivery-options span {
            flex: 1;
            font-size: 14px;
        }

        /* Responsive styles */
        @media (max-width: 768px) {
            .shipping-info-banner {
                flex-direction: column;
                gap: 10px;
            }

            .cart-content-wrapper {
                flex-direction: column;
            }

            .cart-item {
                flex-wrap: wrap;
            }

            .cart-item-image {
                width: 80px;
            }

            .cart-item-right {
                width: 100%;
                flex-direction: row;
                margin-top: 15px;
                align-items: center;
            }

            .item-total {
                text-align: left;
            }
        }

        @media (max-width: 480px) {
            .cart-container {
                padding: 10px;
            }

            .cart-item-actions {
                flex-wrap: wrap;
            }
        }
    </style>

    <main class="cart-container">
        <div class="cart-title">
            <h1 id="cart-heading">
                <%= cartItems && cartItems.length> 0 ? "Shopping bag" : "Your shopping bag is empty" %>
            </h1>
        </div>

        <div class="cart-content-wrapper">
            <!-- Cart items section -->
            <div class="cart-items-section">
                <% if (cartItems && cartItems.length> 0) { %>
                    <div class="cart-items" id="cartItems">
                        <% cartItems.forEach(function(item) { %>
                            <div class="cart-item" data-product-id="<%= item.productId._id %>">
                                <div class="cart-item-image">
                                    <a href="/productDetails?productId=<%=item.productId._id%>">
                                    <img src="/uploads/re-image/<%= item.productId.productImage[0] %>"
                                        alt="<%= item.productId.productName %>" id="product-img">
                                    </a>
                                </div>
                                <div class="cart-item-details">
                                    <h3 class="cart-item-title">
                                        <%= item.productId.productName %>
                                    </h3>
                                    <p class="cart-item-price">Rs. <%= item.price.toLocaleString('en-IN') %>
                                    </p>

                                    <div class="cart-item-info">
                                        <div class="info-row">
                                            <span class="info-label">Colour:</span>
                                            <span class="info-value">
                                                <%= item.productId.color %>
                                            </span>
                                        </div>
                                    </div>

                                    <div class="cart-item-actions">
                                        <button class="wishlist-btn" data-productid="<%= item.productId._id %>">
                                            <!-- Wishlist icon here -->
                                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24"
                                                viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
                                                stroke-linecap="round" stroke-linejoin="round">
                                                <path
                                                    d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78L12 21.23l8.84-8.84a5.5 5.5 0 0 0 0-7.78z">
                                                </path>
                                            </svg>
                                        </button>

                                        <div class="item-quantity">
                                            <button class="decrease-qty">-</button>
                                            <span class="qty">
                                                <%= item.quantity %>
                                            </span>
                                            <button class="increase-qty">+</button>
                                        </div>
                                    </div>
                                </div>
                                <div class="cart-item-right">
                                    <button class="remove-item" onclick="removeFromCart('<%= item.productId._id %>')">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24"
                                            viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
                                            stroke-linecap="round" stroke-linejoin="round">
                                            <polyline points="3 6 5 6 21 6"></polyline>
                                            <path
                                                d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2">
                                            </path>
                                            <line x1="10" y1="11" x2="10" y2="17"></line>
                                            <line x1="14" y1="11" x2="14" y2="17"></line>
                                        </svg>
                                    </button>
                                    <div class="item-total">
                                        <span class="info-label">Size</span>
                                        <span class="size-value">
                                            <%= item.size %>
                                        </span>
                                        <span class="info-label">Total</span>
                                        <span class="total-value">Rs. <%= item.totalPrice.toLocaleString('en-IN') %>
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <% }); %>

                    </div>
            </div>

            <!-- Order summary section (modify as needed) -->
            <div class="order-summary">
                <% let totalOrderValue=0; %>
                    <% cartItems.forEach(function(item) { totalOrderValue +=item.totalPrice; }); %>
                        <div class="summary-row-orderValue"
                            style="display: flex; justify-content: space-between; margin-bottom: 10px;">
                            <span>order value</span>
                            <a href="#" class="apply-orderVal">Rs. <%= totalOrderValue.toLocaleString('en-IN') %></a>
                        </div>
                        <div class="summary-row-deliveryCharge"
                            style="display: flex; justify-content: space-between; margin-bottom: 15px;">
                            <span>delivery charge</span>
                            <a href="#" class="apply-deliveryCharge">Rs. 150</a>
                        </div>
                        <div class="summary-divider"></div>
                        <div class="summary-row total">
                            <span>Total</span>
                            <span id="totalAmount">Rs. <%= (totalOrderValue + 150).toLocaleString('en-IN') %></span>
                        </div>
                        <a href="/checkout">
                            <button class="checkout-btn">Continue to checkout</button>
                        </a>
                        <div class="payment-info">
                            <p>We accept</p>
                            <div class="payment-methods">
                                <img src="https://cdn-icons-png.flaticon.com/512/349/349221.png" alt="Visa"
                                    class="payment-icon">
                                <img src="https://cdn-icons-png.flaticon.com/512/349/349228.png" alt="Mastercard"
                                    class="payment-icon">
                                <span class="cod">Cash on Delivery</span>
                            </div>
                        </div>
                        <div class="delivery-info">
                            <p>Prices and delivery costs are not confirmed until you've reached the checkout.</p>
                            <p>15 days free returns. Read more about <a href="#">return and refund policy</a>.</p>
                            <p>Customers would receive an SMS/WhatsApp notifications regarding deliveries on the
                                registered phone number</p>
                        </div>
                        <div class="delivery-options">
                            <div class="option-icon">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                                    fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                                    stroke-linejoin="round">
                                    <path
                                        d="M21 7.5V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-1.5" />
                                    <path d="M16 2v4" />
                                    <path d="M8 2v4" />
                                    <path d="M3 10h18" />
                                    <path d="M7 14h.01" />
                                    <path d="M11 14h.01" />
                                    <path d="M15 14h.01" />
                                    <path d="M7 18h.01" />
                                    <path d="M11 18h.01" />
                                    <path d="M15 18h.01" />
                                </svg>
                            </div>
                            <span>Delivery and return options</span>
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                                fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                                stroke-linejoin="round">
                                <polyline points="9 18 15 12 9 6"></polyline>
                            </svg>
                        </div>
            </div>
        </div>
        <% } else {%>
            <div class="empty-cart" id="emptyCart">
                <h2>Your Shopping Bag is empty!</h2>
            </div>
            <% } %>
    </main>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>

        document.querySelectorAll('.wishlist-btn').forEach(button => {
            button.addEventListener('click', async function (e) {
                e.preventDefault();
                const productId = this.getAttribute('data-productid');

                try {
                    const wishlistResponse = await fetch("/addToWishlist", {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json"
                        },
                        body: JSON.stringify({ productId })
                    });
                    const wishlistResult = await wishlistResponse.json();

                    if (wishlistResult.status) {
                        const cartResponse = await fetch("/deleteCartProduct", {
                            method: "POST",
                            headers: {
                                "Content-Type": "application/json"
                            },
                            body: JSON.stringify({ productId })
                        });
                        const cartResult = await cartResponse.json();

                        if (cartResult.status) {
                            Swal.fire({
                                icon: "success",
                                title: "Success",
                                text: "Product moved to favourites.",
                                timer: 1500,
                                showConfirmButton: false
                            }).then(()=>{
                                location.reload();
                            })

                            const productElement = document.getElementById('product-' + productId);
                            if (productElement) {
                                productElement.remove();
                            }
                        } else {
                            Swal.fire({
                                icon: "error",
                                title: "Error",
                                text: cartResult.message
                            });
                        }
                    } else {
                        Swal.fire({
                            icon: "info",
                            title: "Notice",
                            text: wishlistResult.message,
                            timer: 1500,
                            showConfirmButton: false
                        });
                    }
                } catch (error) {
                    console.error("Error processing favourites action:", error);
                    Swal.fire({
                        icon: "error",
                        title: "Error",
                        text: "An error occurred. Please try again later."
                    });
                }
            });
        });


        document.querySelectorAll('.increase-qty').forEach(button => {
            button.addEventListener('click', async function () {
                const cartItem = this.closest('.cart-item');
                const productId = cartItem.getAttribute('data-product-id');
                try {
                    const response = await fetch('updateQuantity', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ productId, action: 'increase' })
                    });
                    const result = await response.json();
                    if (result.status) {
                        location.reload();
                        cartItem.querySelector('.qty').innerText = result.quantity;
                        cartItem.querySelector('.total-value').innerText = "Rs. " + result.totalPrice.toLocaleString('en-IN');

                    } else {
                        Swal.fire({
                            title: 'Oops!',
                            text: result.message,
                            icon: 'warning',
                            confirmButtonColor: '#3085d6',
                            confirmButtonText: 'Okay'
                        });
                    }
                } catch (err) {
                    console.error(err);
                }
            });
        });

        document.querySelectorAll('.decrease-qty').forEach(button => {
            button.addEventListener('click', async function () {
                const cartItem = this.closest('.cart-item');
                const productId = cartItem.getAttribute('data-product-id');
                try {
                    const response = await fetch('updateQuantity', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ productId, action: 'decrease' })
                    });
                    const result = await response.json();
                    if (result.status) {
                        location.reload();
                        cartItem.querySelector('.qty').innerText = result.quantity;
                        cartItem.querySelector('.total-value').innerText = "Rs. " + result.totalPrice.toLocaleString('en-IN');

                    } else {
                        Swal.fire({
                            title: 'Oops!',
                            text: result.message,
                            icon: 'warning',
                            confirmButtonColor: '#3085d6',
                            confirmButtonText: 'Okay'
                        });
                    }
                } catch (err) {
                    console.error(err);
                }
            });
        });

        function removeFromCart(productId) {
            Swal.fire({
                title: "Are you sure?",
                text: "Do you really want to delete the product?",
                icon: "warning",
                showCancelButton: true,
                confirmButtonText: "Yes, delete it!",
                cancelButtonText: "Cancel",
                reverseButtons: true,
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch('/deleteCartProduct', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ productId: productId })
                    })
                        .then(response => response.json())
                        .then(result => {
                            if (result.status) {
                                Swal.fire("Deleted!", result.message, "success").then(() => {
                                    location.reload();
                                });
                            } else {
                                Swal.fire("Error", result.message, "error");
                            }
                        })
                        .catch(error => {
                            console.error("Error deleting product:", error);
                            Swal.fire("Error", "Something went wrong!", "error");
                        });
                }
            });
        }

    </script>



    <%- include("../../views/partials/user/footer") %>